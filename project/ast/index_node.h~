#ifndef __PWN_AST_INDEX_NODE_H__
#define __PWN_AST_INDEX_NODE_H__

#include <cdk/ast/binary_expression_node.h>
#include <string>
namespace pwn {
  /**
   * Class for describing the index operator
   */
  class index_node : public lvalue_node {
    cdk::expression_node *_position;
    std::string *_string;
  public:
    /**
     * @param lineno source code line number for this node
     * @param left first operand
     * @param right second operand
     */
    inline index_node(int lineno, std::string str, cdk::expression_node *exp) :
		lvalue_node(lineno, str), _position(exp), _string(str) {}

     inline cdk::expression_node *position(){ return _position; }
     inline std::string *string(){ return _string; }
    /**
     * @param sp semantic processor visitor
     * @param level syntactic tree level
     */
    void accept(basic_ast_visitor *sp, int level) {
      sp->do_index_node(this, level);
    }

  };
}

#endif
