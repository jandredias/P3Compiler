#ifndef __PWN_AST_VAR_DEC_NODE_H__
#define __PWN_AST_VAR_DEC_NODE_H__

#include <string>
#include <cdk/basic_type.h>
namespace pwn {
	
	/**
	 * Class for describing declaration variable nodes.
	 */
	class var_dec_node: public cdk::basic_node {
		basic_type *_type;
		std::string *_name;
	public:	
		inline var_dec_node(int lineno, basic_type *type, std::string* name) :
			basic_node(lineno), _type(type), _name(name){}
	public:
		inline basic_type *type(){ return _type; }
		inline std::string *name(){ return _name; }
		std::string type_name(){
		  if(_type->name() == basic_type::TYPE_INT)
		    return "inteiro";
		  if(_type->name() == basic_type::TYPE_DOUBLE)
		    return "double";
		  if(_type->name() == basic_type::TYPE_STRING)
		    return "string";
		  if(_type->name() == basic_type::TYPE_VOID)
		    return "VOID";
		}
		void accept(basic_ast_visitor *sp, int level) {
		  sp->do_var_dec_node(this, level);
		}
	};

}

#endif
